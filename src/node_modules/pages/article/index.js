import React, {Fragment, useEffect, useContext, useState} from 'react'
import {Redirect} from 'react-router-dom'
import useFetch from 'hooks/useFetch'
import FeedItemUser from 'components/feeditemuser'
import TagList from 'components/taglist'
import {CurrentUserContext} from 'contexts/currentUser'

const Article = (props) => {
    const [userState, dispatch] = useContext(CurrentUserContext)
    const slug = props.match.params.slug
    const apiUrl = `/articles/${slug}`
    const editUrl = `/articles/${slug}/edit`
    const [{error, response, isLoading}, doFetch] = useFetch(apiUrl)
    const [{error: errorDeleteArticle, response: responseDeleteArticle}, doDeleteArticle] = useFetch(apiUrl)
    const [deleteSuceess, setDeleteSuceess] = useState(false)
    const [editRedirect, setEditRedirect] = useState(false)

    const isAuthor = userState && userState.isLoggedIn && response && userState.currentUser.username === response.article.author.username

    const handleEditArticle = e => {
        e.preventDefault()
        setEditRedirect(true)
    }

    const handleDeleteArticle = e => {
        e.preventDefault()
        doDeleteArticle({
            method: 'delete'
        })
    }

    useEffect(() => {
        doFetch()
    }, [doFetch])

    useEffect(()=> {
        console.log(responseDeleteArticle)
        if(!responseDeleteArticle) {
            return false
        }
        setDeleteSuceess(true)
    }, [responseDeleteArticle])

    if(deleteSuceess) {
        return <Redirect to='/' />
    }

    if(editRedirect) {
        return <Redirect to={editUrl} />
    }

    return (
        <div>
          { 
            !isLoading && response && response.article && (
                <Fragment>
                    <div className="page-header">
                        <div className="page-content">
                            <h2>{response.article.title}</h2>
                            <FeedItemUser article={response.article} />
                            {
                                isAuthor
                                &&
                                (<div className="page-actions">
                                <button onClick={handleEditArticle}>Edit Article</button>
                                <button onClick={handleDeleteArticle}>Delete Article</button>
                            </div>)
                            }
                        </div>
                    </div>
                    <div className="page-body">
                        <p>
                            {response.article.body}
                        </p>
                        <TagList article={response.article} />
                    </div>
                </Fragment>
            )
            }
        </div>
    )
}

export default Article
