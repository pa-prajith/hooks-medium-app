import useFetch from 'hooks/useFetch'
import { useEffect, useContext } from 'react'
import {CurrentUserContext} from 'contexts/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

export default ({children}) => {
    const [{response}, doFetch] = useFetch('/user')
    const [state, setCurrentUserState] = useContext(CurrentUserContext)
    const [token] = useLocalStorage('token')

    useEffect(() => {
        if(!token) {
            setCurrentUserState(state => ({
                ...state,
                isLoading: false
            }))
            return false
        }
        doFetch()
        setCurrentUserState(state => ({
            ...state,
            isLoading: true
        }))
    },[doFetch])

    useEffect(() => {
        if(!response) {
            return false
        }

        setCurrentUserState(state => ({
            ...state,
            isLoading: false,
            isLoggedIn: true,
            currentUser: response.user
        }))
    },[response])

    return children;
}