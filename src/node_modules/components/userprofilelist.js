import React, {Fragment, useEffect, useContext, useState} from 'react'
import useFetch from 'hooks/useFetch'
import FeedItemUser from 'components/feeditemuser'
import PostToggle from 'components/Posttoggle'
import Pagination from 'components/pagination'
import {LIMIT, getPageQueryForApi} from 'utils'
import {stringify} from 'query-string'
import ErrorMessage from 'components/errormessage'
import Loading from 'components/loading'
import Feed from 'components/feed'


const Userprofilelist = ({location, match, username}) => {
    const isFavorites = location.pathname.includes('favorites')
    const limit = LIMIT
    const {currentPage, offset} = getPageQueryForApi(location.search)
    const getApiURL = ({username, offset, isFavorites}) => {
        const params = isFavorites ? {
            limit,
            offset,
            favorited: username
        } : {
            limit,
            offset,
            author: username
        }
        const stringifiedUrl = stringify(params)
        return `/articles?${stringifiedUrl}`
    }

    const apiUrlForList = getApiURL({username, offset, isFavorites})

    const [{response, error, isLoading}, doFetch] = useFetch(apiUrlForList)
    const paginationUrl = match.url
    useEffect(() => {
        doFetch()
    }, [doFetch, currentPage, apiUrlForList])
    return (
        <Fragment>
              <div>
                      <PostToggle slug={username} />
                    {
                        isLoading && !response && 
                            <Loading />
                    }
                    {
                        error && 
                            <ErrorMessage />
                    }
                    {    
                        !isLoading && response && (
                            <Fragment>
                                <Feed articles={response.articles} />
                                <Pagination total={response.articlesCount} limit={limit} currentPage={currentPage} url={paginationUrl} />
                            </Fragment>
                        )
                    }
                 </div>
              </Fragment>
    )
}

export default Userprofilelist
